{"mappings":"MAAA,SAASA,EAAaC,GACpB,IAAKA,EAAM,MAAO,GAElB,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BD,EAASG,KAAKJ,EAAKK,MAAM,EAAGH,EAAI,IAElC,OAAOD,EAGT,SAASK,EAAcN,GACrB,IAAKA,EAAM,MAAO,GAElB,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BD,EAASG,KAAKJ,EAAKK,MAAMH,EAAGF,EAAKG,SAEnC,OAAOF,SAoCTM,EAAiB,cAjCjB,SAAsBC,GACpB,MAAMC,EAAc,GACpB,IAAK,MAAMT,KAAQQ,EACjBC,EAAYL,KAAK,CAAEM,KAAMX,EAAaC,GAAOW,MAAOL,EAAcN,KAGpE,MAAMY,EAAe,GACrB,IAAK,IAAIV,EAAI,EAAGA,EAAIO,EAAYN,OAAQD,IAAK,CAC3C,MAAMW,EAAWJ,EAAYP,GAC7B,IAAK,MAAMY,KAAYD,EAASH,KAC9B,IAAK,IAAIK,EAAI,EAAGA,EAAIN,EAAYN,OAAQY,IAAK,CAC3C,GAAIb,IAAMa,EAAG,SACb,MAAMC,EAAYP,EAAYM,GAC9B,IAAK,MAAME,KAAaD,EAAUL,MAChCC,EAAaR,KAAKU,EAAWG,IAMrC,MAAO,IAAI,IAAIC,IAAIN,gBAGrB,SAAoBO,EAAKC,GACvB,OAAKD,EAGEA,EAAIE,MAAMD,GACdE,QAAOC,KAAOA,IACdC,KAAID,GAAKA,EAAEE,SACXD,KAAID,GAAKA,EAAEG,WAAU,MAAQ,MALvB,iBAQiC3B,gBAAcO,ICrDpDqB,eAAApB,EAAAqB,WAcOC,SAASC,eAAe,YAChCC,iBAAiB,SAbJC,IAChB,MAAMpB,EAAeqB,EACnBC,EAAWF,EAAMG,OAAOC,MAAO,MAE3BC,EAAgBR,SAASC,eAAe,UAC9CO,EAAcC,UAAY,GAC1B1B,EAAa2B,SAAQvC,IACnB,MAAMwC,EAAQX,SAASY,cAAc,KACrCD,EAAME,YAAc1C,EACpBqC,EAAcM,YAAYH","sources":["js/lib.js","js/main.js"],"sourcesContent":["function leftPartials(word) {\n  if (!word) return []\n\n  const partials = []\n  for (let i = 0; i < word.length; i++) {\n    partials.push(word.slice(0, i + 1))\n  }\n  return partials\n}\n\nfunction rightPartials(word) {\n  if (!word) return []\n\n  const partials = []\n  for (let i = 0; i < word.length; i++) {\n    partials.push(word.slice(i, word.length))\n  }\n  return partials\n}\n\nfunction portmantonne(words) {\n  const partialized = []\n  for (const word of words) {\n    partialized.push({ left: leftPartials(word), right: rightPartials(word) })\n  }\n\n  const portmanteaus = []\n  for (let i = 0; i < partialized.length; i++) {\n    const leftWord = partialized[i];\n    for (const leftPart of leftWord.left) {\n      for (let j = 0; j < partialized.length; j++) {\n        if (i === j) continue\n        const rightWord = partialized[j]\n        for (const rightPart of rightWord.right) {\n          portmanteaus.push(leftPart + rightPart)\n        }\n      }\n    }\n  }\n\n  return [...new Set(portmanteaus)]\n}\n\nfunction csvToArray(csv, separator) {\n  if (!csv) {\n    return []\n  }\n  return csv.split(separator)\n    .filter(w => !!w)\n    .map(w => w.trim())\n    .map(w => w.replaceAll(/\\s/g, ''))\n}\n\nmodule.exports = {portmantonne, csvToArray, leftPartials, rightPartials};\n","const {portmantonne, csvToArray} = require(\"./lib\");\n\nconst listener = (event) => {\n  const portmanteaus = portmantonne(\n    csvToArray(event.target.value, ',')\n  )\n  const outputElement = document.getElementById('output')\n  outputElement.innerHTML = ''\n  portmanteaus.forEach(word => {\n    const newEl = document.createElement('p');\n    newEl.textContent = word\n    outputElement.appendChild(newEl)\n  })\n}\nconst elem = document.getElementById('csvWords')\nelem.addEventListener('keyup', listener);\n"],"names":["$43eb4e0cc34f6ca0$var$leftPartials","word","partials","i","length","push","slice","$43eb4e0cc34f6ca0$var$rightPartials","$43eb4e0cc34f6ca0$exports","words","partialized","left","right","portmanteaus","leftWord","leftPart","j","rightWord","rightPart","Set","csv","separator","split","filter","w","map","trim","replaceAll","portmantonne","csvToArray","document","getElementById","addEventListener","event","$77ac944da51b7354$require$portmantonne","$77ac944da51b7354$require$csvToArray","target","value","outputElement","innerHTML","forEach","newEl","createElement","textContent","appendChild"],"version":3,"file":"index.118d603f.js.map"}