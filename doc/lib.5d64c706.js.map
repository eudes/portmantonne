{"version":3,"sources":["js/lib.js"],"names":["leftPartials","word","partials","i","length","push","slice","rightPartials","portmantonne","words","partialized","left","right","portmanteaus","leftWord","leftPart","j","rightWord","rightPart","Set","csvToArray","csv","separator","split","filter","w","map","trim","replaceAll","module","exports"],"mappings":"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","file":"lib.5d64c706.js","sourceRoot":"..","sourcesContent":["function leftPartials(word) {\n  if (!word) return []\n\n  const partials = []\n  for (let i = 0; i < word.length; i++) {\n    partials.push(word.slice(0, i + 1))\n  }\n  return partials\n}\n\nfunction rightPartials(word) {\n  if (!word) return []\n\n  const partials = []\n  for (let i = 0; i < word.length; i++) {\n    partials.push(word.slice(i, word.length))\n  }\n  return partials\n}\n\nfunction portmantonne(words) {\n  const partialized = []\n  for (const word of words) {\n    partialized.push({ left: leftPartials(word), right: rightPartials(word) })\n  }\n\n  const portmanteaus = []\n  for (let i = 0; i < partialized.length; i++) {\n    const leftWord = partialized[i];\n    for (const leftPart of leftWord.left) {\n      for (let j = 0; j < partialized.length; j++) {\n        if (i === j) continue\n        const rightWord = partialized[j]\n        for (const rightPart of rightWord.right) {\n          portmanteaus.push(leftPart + rightPart)\n        }\n      }\n    }\n  }\n\n  return [...new Set(portmanteaus)]\n}\n\nfunction csvToArray(csv, separator) {\n  if (!csv) {\n    return []\n  }\n  return csv.split(separator)\n    .filter(w => !!w)\n    .map(w => w.trim())\n    .map(w => w.replaceAll(/\\s/g, ''))\n}\n\nmodule.exports = {portmantonne, csvToArray, leftPartials, rightPartials};\n"]}